<Window x:Class="FileSizeAnalyzerGUI.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:FileSizeAnalyzerGUI"
        mc:Ignorable="d"
        Title="FileSizeAnalyzer Pro" Height="650" Width="1100"
        WindowStyle="None" AllowsTransparency="True" Background="Transparent"
        WindowStartupLocation="CenterScreen">

    <Window.Resources>
        <!-- Converters -->
        <local:ColorToBrushConverter x:Key="ColorToBrushConverter"/>
        <local:FormatSizeConverter x:Key="FormatSizeConverter"/>
        <local:PathToNameConverter x:Key="PathToNameConverter"/>
        <BooleanToVisibilityConverter x:Key="BoolToVisConverter"/>

        <!-- Colors -->
        <SolidColorBrush x:Key="WindowBackgroundBrush" Color="#FF2D2D30"/>
        <SolidColorBrush x:Key="BorderBrush" Color="#FF434346"/>
        <SolidColorBrush x:Key="TextBrush" Color="#FFE0E0E0"/>
        <SolidColorBrush x:Key="GlyphBrush" Color="#FFCCCCCC"/>
        <SolidColorBrush x:Key="AccentBrush" Color="#FF007ACC"/>
        <SolidColorBrush x:Key="AccentHoverBrush" Color="#FF009AFB"/>
        <SolidColorBrush x:Key="ControlBackgroundBrush" Color="#FF3F3F46"/>
        <SolidColorBrush x:Key="ControlHoverBrush" Color="#FF525257"/>
        <SolidColorBrush x:Key="ControlPressedBrush" Color="#FF005A9E"/>

        <!-- Base Button Style -->
        <Style TargetType="{x:Type Button}">
            <Setter Property="Background" Value="{StaticResource ControlBackgroundBrush}"/>
            <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
            <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="10,5"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource ControlHoverBrush}"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="{StaticResource ControlPressedBrush}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Primary Action Button Style -->
        <Style x:Key="PrimaryActionButton" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
            <Setter Property="Background" Value="{StaticResource AccentBrush}"/>
            <Setter Property="Foreground" Value="White"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource AccentHoverBrush}"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="{StaticResource ControlPressedBrush}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Custom Title Bar Button Style -->
        <Style x:Key="TitleBarButton" TargetType="Button">
            <Setter Property="Width" Value="46"/>
            <Setter Property="Height" Value="32"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Foreground" Value="{StaticResource GlyphBrush}"/>
            <Setter Property="FontFamily" Value="Segoe MDL2 Assets"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}">
                            <TextBlock Text="{TemplateBinding Content}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource ControlHoverBrush}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="CloseButton" TargetType="Button" BasedOn="{StaticResource TitleBarButton}">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#FFE81123"/>
                    <Setter Property="Foreground" Value="White"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- ComboBox Style -->
        <Style TargetType="{x:Type ComboBox}">
            <Setter Property="Background" Value="{StaticResource ControlBackgroundBrush}"/>
            <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
            <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
            <Setter Property="Padding" Value="4,3"/>
        </Style>

        <!-- TextBox Style -->
        <Style TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="{StaticResource ControlBackgroundBrush}"/>
            <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
            <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
            <Setter Property="CaretBrush" Value="{StaticResource TextBrush}"/>
            <Setter Property="Padding" Value="4,3"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
        </Style>

        <!-- TabControl and TabItem Styles -->
        <Style TargetType="{x:Type TabControl}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
        </Style>
        <Style TargetType="{x:Type TabItem}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{StaticResource GlyphBrush}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="10,5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Grid>
                            <Border Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,0,0,1" Margin="0,0,-1,0">
                                <ContentPresenter x:Name="ContentSite" VerticalAlignment="Center" HorizontalAlignment="Center" ContentSource="Header" Margin="{TemplateBinding Padding}"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
                                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource AccentBrush}" />
                                <Setter TargetName="Border" Property="BorderThickness" Value="0,0,0,2" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ContextMenu x:Key="FileItemContextMenu">
            <MenuItem Header="Open Containing Folder" Click="OpenFolder_Click"/>
            <Separator />
            <MenuItem Header="Move to Recycle Bin" Click="Delete_Click"/>
        </ContextMenu>
    </Window.Resources>

    <Border BorderBrush="{StaticResource BorderBrush}" BorderThickness="1" Background="{StaticResource WindowBackgroundBrush}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <Grid Grid.Row="0" Height="32" Background="Transparent" MouseLeftButtonDown="TitleBar_MouseLeftButtonDown">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="10,0">
                    <Image Source="pack://application:,,,/FileSizeAnalyzerGUI;component/assets/icon.ico" Width="16" Height="16"/>
                    <TextBlock Text="FileSizeAnalyzer Pro" Foreground="{StaticResource TextBrush}" VerticalAlignment="Center" Margin="5,0"/>
                </StackPanel>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                    <Button Content="&#xE921;" Click="Minimize_Click" Style="{StaticResource TitleBarButton}"/>
                    <Button Content="&#xE922;" Click="Maximize_Click" Style="{StaticResource TitleBarButton}"/>
                    <Button Content="&#xE8BB;" Click="Close_Click" Style="{StaticResource CloseButton}"/>
                </StackPanel>
            </Grid>

            <Grid Grid.Row="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <Border Grid.Row="0" BorderBrush="{StaticResource BorderBrush}" BorderThickness="0,0,0,1" Padding="5">
                    <StackPanel Orientation="Horizontal" Margin="5">
                        <ComboBox x:Name="DriveSelectionComboBox" Width="60" Margin="5" SelectionChanged="DriveSelectionComboBox_SelectionChanged" VerticalContentAlignment="Center"/>
                        <TextBox x:Name="DirectoryPathTextBox" Width="140" Margin="5"/>
                        <Button Content="Browse" Click="BrowseButton_Click" Width="70" Margin="5"/>
                        <Grid Width="120" Margin="5">
                            <TextBlock Text="e.g., .jpg, .zip" Foreground="Gray" IsHitTestVisible="False" VerticalAlignment="Center" Margin="5,0" Visibility="{Binding Text.IsEmpty, ElementName=ExtensionFilterTextBox, Converter={StaticResource BoolToVisConverter}}"/>
                            <TextBox x:Name="ExtensionFilterTextBox" Background="Transparent"/>
                        </Grid>
                        <ComboBox x:Name="SizeFilterComboBox" Width="100" Margin="5" SelectedIndex="0">
                            <ComboBoxItem Content="All Sizes"/>
                            <ComboBoxItem Content="> 1MB"/>
                            <ComboBoxItem Content="> 10MB"/>
                            <ComboBoxItem Content="> 100MB"/>
                            <ComboBoxItem Content="> 500MB"/>
                            <ComboBoxItem Content="> 1GB"/>
                            <ComboBoxItem Content="> 5GB"/>
                            <ComboBoxItem Content="> 10GB"/>
                        </ComboBox>
                        <ComboBox x:Name="DateFilterComboBox" Width="120" Margin="5" SelectedIndex="0" SelectionChanged="DateFilterComboBox_SelectionChanged">
                            <ComboBoxItem Content="All Dates"/>
                            <ComboBoxItem Content="Last Month"/>
                            <ComboBoxItem Content="Last Year"/>
                            <ComboBoxItem Content="Older Than 1 Year"/>
                            <ComboBoxItem Content="Custom Range"/>
                        </ComboBox>
                        <DatePicker x:Name="StartDatePicker" Width="100" Margin="5" Visibility="Collapsed"/>
                        <DatePicker x:Name="EndDatePicker" Width="100" Margin="5" Visibility="Collapsed"/>
                        <Button Content="Apply Filters" Click="ApplyFilters_Click" Margin="5,5,15,5"/>
                        <Button x:Name="ScanButton" Content="Scan" Click="ScanButton_Click" Width="80" Visibility="Visible" Style="{StaticResource PrimaryActionButton}"/>
                        <Button x:Name="StopScanButton" Content="Stop Scan" Click="StopScanButton_Click" Width="80" Visibility="Collapsed"/>
                    </StackPanel>
                </Border>

                <ProgressBar x:Name="ScanProgressBar" Grid.Row="1" Height="5" Margin="0" BorderThickness="0" Background="Transparent" Visibility="Collapsed">
                    <ProgressBar.Foreground>
                        <SolidColorBrush Color="{DynamicResource {x:Static SystemColors.HighlightColorKey}}"/>
                    </ProgressBar.Foreground>
                </ProgressBar>
                <TextBlock x:Name="ProgressTextBlock" Grid.Row="1" Margin="10,0" VerticalAlignment="Center" Foreground="{StaticResource TextBrush}" Visibility="Collapsed"/>

                <TabControl Grid.Row="2" Margin="5" x:Name="MainTabControl">
                    <TabItem Header="Directory Tree">
                        <TreeView x:Name="DirectoryTreeView" Background="Transparent" BorderThickness="0">
                            <TreeView.ItemContainerStyle>
                                <Style TargetType="{x:Type TreeViewItem}">
                                    <Setter Property="ContextMenu" Value="{StaticResource FileItemContextMenu}"/>
                                    <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
                                    <Setter Property="Padding" Value="3"/>
                                </Style>
                            </TreeView.ItemContainerStyle>
                            <TreeView.ItemTemplate>
                                <HierarchicalDataTemplate DataType="{x:Type local:FileSystemNode}" ItemsSource="{Binding Children}">
                                    <StackPanel Orientation="Horizontal" Margin="2">
                                        <Image Source="{Binding Icon}" Width="16" Height="16" Margin="0,0,5,0" VerticalAlignment="Center"/>
                                        <Rectangle Height="15" Width="{Binding BarWidth}" Fill="{Binding BarFill, Converter={StaticResource ColorToBrushConverter}}" ToolTip="{Binding FormattedSize, StringFormat='Size: {0}'}" Margin="0,0,5,0"/>
                                        <TextBlock Text="{Binding FullPath, Converter={StaticResource PathToNameConverter}}" Margin="0,0,10,0" ToolTip="{Binding FullPath}"/>
                                        <TextBlock Text="{Binding FormattedSize, StringFormat='({0})'}" Foreground="Gray"/>
                                    </StackPanel>
                                </HierarchicalDataTemplate>
                            </TreeView.ItemTemplate>
                        </TreeView>
                    </TabItem>
                    <TabItem Header="File List">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <DataGrid x:Name="ResultsDataGrid" Grid.Column="0" AutoGenerateColumns="False" IsReadOnly="True" MouseDoubleClick="ResultsDataGrid_MouseDoubleClick" SelectionChanged="ResultsDataGrid_SelectionChanged">
                                <DataGrid.RowStyle>
                                    <Style TargetType="DataGridRow">
                                        <Setter Property="ContextMenu" Value="{StaticResource FileItemContextMenu}"/>
                                    </Style>
                                </DataGrid.RowStyle>
                                <DataGrid.Columns>
                                    <DataGridTextColumn Header="Path" Binding="{Binding FullPath}" Width="*"/>
                                    <DataGridTextColumn Header="Size" Binding="{Binding FormattedSize}" Width="100"/>
                                    <DataGridTextColumn Header="Creation Time" Binding="{Binding CreationTime, StringFormat='g'}" Width="150"/>
                                    <DataGridTextColumn Header="Last Write Time" Binding="{Binding LastWriteTime, StringFormat='g'}" Width="150"/>
                                    <DataGridTextColumn Header="Extension" Binding="{Binding Extension}" Width="100"/>
                                </DataGrid.Columns>
                            </DataGrid>
                            <Border Grid.Column="1" Width="300" BorderBrush="{StaticResource BorderBrush}" BorderThickness="1,0,0,0" Padding="5">
                                <ScrollViewer>
                                    <StackPanel x:Name="PreviewPanel">
                                        <TextBlock Text="File Preview" FontWeight="Bold" Margin="0,0,0,5" Foreground="{StaticResource TextBrush}"/>
                                        <Image x:Name="PreviewImage" Stretch="Uniform" MaxHeight="200" Visibility="Collapsed"/>
                                        <TextBox x:Name="PreviewTextBox" IsReadOnly="True" TextWrapping="Wrap" Height="200" Visibility="Collapsed"/>
                                        <TextBlock x:Name="PreviewMessage" Text="Select a file to preview" Foreground="Gray"/>
                                    </StackPanel>
                                </ScrollViewer>
                            </Border>
                        </Grid>
                    </TabItem>
                    <TabItem Header="Largest Files">
                        <DataGrid x:Name="LargestFilesDataGrid" AutoGenerateColumns="False" IsReadOnly="True" MouseDoubleClick="ResultsDataGrid_MouseDoubleClick">
                            <DataGrid.RowStyle>
                                <Style TargetType="DataGridRow">
                                    <Setter Property="ContextMenu" Value="{StaticResource FileItemContextMenu}"/>
                                </Style>
                            </DataGrid.RowStyle>
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Path" Binding="{Binding FullPath}" Width="*"/>
                                <DataGridTextColumn Header="Size" Binding="{Binding FormattedSize}" Width="100"/>
                                <DataGridTextColumn Header="Last Write Time" Binding="{Binding LastWriteTime, StringFormat='g'}" Width="150"/>
                            </DataGrid.Columns>
                        </DataGrid>
                    </TabItem>
                    <TabItem Header="Empty Folders">
                        <DataGrid x:Name="EmptyFoldersDataGrid" AutoGenerateColumns="False" IsReadOnly="True" MouseDoubleClick="ResultsDataGrid_MouseDoubleClick">
                            <DataGrid.RowStyle>
                                <Style TargetType="DataGridRow">
                                    <Setter Property="ContextMenu" Value="{StaticResource FileItemContextMenu}"/>
                                </Style>
                            </DataGrid.RowStyle>
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Path" Binding="{Binding FullPath}" Width="*"/>
                            </DataGrid.Columns>
                        </DataGrid>
                    </TabItem>
                    <TabItem Header="Duplicates">
                        <TreeView x:Name="DuplicatesTreeView" MouseDoubleClick="DuplicatesTreeView_MouseDoubleClick">
                            <TreeView.Resources>
                                <HierarchicalDataTemplate DataType="{x:Type local:DuplicateSet}" ItemsSource="{Binding Files}">
                                    <StackPanel Orientation="Horizontal">
                                        <Image Source="{Binding Icon}" Width="16" Height="16" Margin="0,0,5,0" />
                                        <TextBlock Text="{Binding FileName}" FontWeight="Bold"/>
                                        <TextBlock Text="{Binding Count, StringFormat=' ({0} copies)'}" Margin="5,0,0,0"/>
                                        <TextBlock Text="{Binding FormattedSize, StringFormat=', Total: {0}'}" Foreground="Gray" Margin="5,0,0,0"/>
                                    </StackPanel>
                                </HierarchicalDataTemplate>
                                <DataTemplate DataType="{x:Type local:FileSystemNode}">
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Text="{Binding FullPath}" />
                                    </StackPanel>
                                </DataTemplate>
                            </TreeView.Resources>
                            <TreeView.ItemContainerStyle>
                                <Style TargetType="{x:Type TreeViewItem}">
                                    <Setter Property="ContextMenu" Value="{StaticResource FileItemContextMenu}"/>
                                </Style>
                            </TreeView.ItemContainerStyle>
                        </TreeView>
                    </TabItem>
                    <TabItem Header="Treemap">
                        <Canvas x:Name="TreemapCanvas" SizeChanged="TreemapCanvas_SizeChanged"/>
                    </TabItem>
                    <TabItem Header="File Types">
                        <DataGrid x:Name="FileTypesDataGrid" AutoGenerateColumns="False" IsReadOnly="True">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Type" Binding="{Binding Extension}" Width="*"/>
                                <DataGridTextColumn Header="Total Size" Binding="{Binding TotalSize, Converter={StaticResource FormatSizeConverter}}" Width="150"/>
                                <DataGridTextColumn Header="File Count" Binding="{Binding FileCount}" Width="100"/>
                            </DataGrid.Columns>
                        </DataGrid>
                    </TabItem>
                    <TabItem Header="File Age">
                        <DataGrid x:Name="FileAgeDataGrid" AutoGenerateColumns="False" IsReadOnly="True">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Age Category" Binding="{Binding Category}" Width="*"/>
                                <DataGridTextColumn Header="Total Size" Binding="{Binding TotalSize, Converter={StaticResource FormatSizeConverter}}" Width="150"/>
                                <DataGridTextColumn Header="File Count" Binding="{Binding FileCount}" Width="100"/>
                            </DataGrid.Columns>
                        </DataGrid>
                    </TabItem>
                    <TabItem Header="Reports">
                        <TextBox x:Name="ReportsTextBox" IsReadOnly="True" TextWrapping="Wrap" VerticalScrollBarVisibility="Auto" Margin="5"/>
                    </TabItem>
                    <TabItem Header="Scan History">
                        <DataGrid x:Name="ScanHistoryDataGrid" AutoGenerateColumns="False" IsReadOnly="True" MouseDoubleClick="ScanHistoryDataGrid_MouseDoubleClick">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Scan Date" Binding="{Binding ScanDate, StringFormat='g'}" Width="150"/>
                                <DataGridTextColumn Header="Path" Binding="{Binding Path}" Width="*"/>
                                <DataGridTextColumn Header="Total Size" Binding="{Binding TotalSize, Converter={StaticResource FormatSizeConverter}}" Width="150"/>
                            </DataGrid.Columns>
                        </DataGrid>
                    </TabItem>
                </TabControl>

                <StackPanel Grid.Row="3" Orientation="Horizontal" HorizontalAlignment="Center" Margin="10">
                    <Button Content="Help" Click="HelpButton_Click" Width="100" Margin="0,0,10,0"/>
                    <Button Content="Export to CSV" Click="ExportButton_Click" Width="100" Margin="0,0,10,0"/>
                    <Button x:Name="AboutButton" Content="About" Click="AboutButton_Click" Width="100"/>
                </StackPanel>
            </Grid>
        </Grid>
    </Border>
</Window>
